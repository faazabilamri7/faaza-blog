---
import type { Post } from '~/types';
import { getPermalink } from '~/utils/permalinks';
import { getFormattedDate } from '~/utils/utils';
import type { ImageMetadata } from 'astro';
import { findImage } from '~/utils/images';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = await findImage(post.image);
const link = getPermalink(post.permalink, 'post');
---

<article
  class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-all duration-300"
>
  <a href={link} class="block">
    {
      image && typeof image === 'object' && 'src' in image && (
        <div class="aspect-video overflow-hidden bg-gray-400 dark:bg-gray-700">
          <img
            src={image.src}
            alt={post.image?.alt || post.title}
            class="w-full h-full object-cover hover:scale-105 transition-transform duration-300"
            loading="lazy"
            width={image.width}
            height={image.height}
          />
        </div>
      )
    }
    <div class="p-6">
      <div class="flex flex-wrap gap-2 items-center text-sm text-gray-500 dark:text-gray-400 mb-2">
        {
          post.category && (
            <span class="bg-blue-100 dark:bg-blue-900 text-blue-800 dark:text-blue-100 px-2.5 py-0.5 rounded-full text-xs font-medium">
              {post.category.title}
            </span>
          )
        }
        <time datetime={post.publishDate.toISOString()}>
          {
            post.publishDate.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })
          }
        </time>
      </div>
      <h2 class="text-2xl font-bold text-gray-900 mb-3 hover:text-blue-600 transition-colors">
        <a href={getPermalink(post.permalink)} class="block">
          {post.title}
        </a>
      </h2>
      {post.excerpt && <p class="text-gray-600 mb-4 line-clamp-3">{post.excerpt}</p>}
      <div class="flex items-center justify-between">
        <div class="flex items-center">
          {post.author && <span class="text-sm text-gray-500">By {post.author}</span>}
        </div>
        {post.readingTime && <span class="text-sm text-gray-500">{post.readingTime} min read</span>}
      </div>
    </div>
  </a>
</article>
